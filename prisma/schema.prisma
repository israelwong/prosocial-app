generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Agenda {
  id            String    @id
  userId        String?
  eventoId      String
  concepto      String?
  descripcion   String?
  googleMapsUrl String?
  direccion     String?
  fecha         DateTime?
  hora          String?
  status        String    @default("pendiente")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime
  agendaTipo    String?
  Evento        Evento    @relation(fields: [eventoId], references: [id])
  User          User?     @relation(fields: [userId], references: [id])
}

model AgendaTipo {
  id        String   @id
  nombre    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Anuncio {
  id                  String            @id
  campaniaId          String
  nombre              String
  anuncioTipoId       String
  anuncioCategoriaId  String
  anuncioPlataformaId String
  imagen_url          String
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime
  AnuncioCategoria    AnuncioCategoria  @relation(fields: [anuncioCategoriaId], references: [id])
  AnuncioPlataforma   AnuncioPlataforma @relation(fields: [anuncioPlataformaId], references: [id])
  AnuncioTipo         AnuncioTipo       @relation(fields: [anuncioTipoId], references: [id])
  Campania            Campania          @relation(fields: [campaniaId], references: [id])
}

model AnuncioCategoria {
  id        String    @id
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Anuncio   Anuncio[]
}

model AnuncioPlataforma {
  id        String    @id
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Anuncio   Anuncio[]
}

model AnuncioTipo {
  id        String    @id
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Anuncio   Anuncio[]
}

model AnuncioVisita {
  id        String   @id
  anuncioId String
  fecha     DateTime
  createdAt DateTime @default(now())
}

model Campania {
  id        String    @id
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Anuncio   Anuncio[]
}

model Canal {
  id        String    @id
  nombre    String
  posicion  Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Cliente   Cliente[]
}

model Cliente {
  id            String       @id
  nombre        String
  email         String?
  telefono      String?      @unique
  direccion     String?
  status        String       @default("activo")
  canalId       String?
  userId        String?
  passwordHash  String?
  emailVerified Boolean      @default(false)
  isActive      Boolean      @default(true)
  lastLogin     DateTime?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime
  Canal         Canal?       @relation(fields: [canalId], references: [id])
  Evento        Evento[]
  Pago          Pago[]
  Suscripcion   Suscripcion?
}

model CondicionesComerciales {
  id                               String                             @id
  nombre                           String
  descripcion                      String?
  descuento                        Float?
  porcentaje_anticipo              Float?                             @default(0)
  status                           String                             @default("active")
  orden                            Int?                               @default(0)
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Cotizacion                       Cotizacion[]
  Pago                             Pago[]
}

model CondicionesComercialesMetodoPago {
  id                       String                 @id
  condicionesComercialesId String
  metodoPagoId             String
  orden                    Int?                   @default(0)
  status                   String                 @default("active")
  createdAt                DateTime               @default(now())
  updatedAt                DateTime
  CondicionesComerciales   CondicionesComerciales @relation(fields: [condicionesComercialesId], references: [id], onDelete: Cascade)
  MetodoPago               MetodoPago             @relation(fields: [metodoPagoId], references: [id])
  Pago                     Pago[]
  Cotizacion               Cotizacion[]
}

model Configuracion {
  id                          String   @id
  nombre                      String
  utilidad_servicio           Float
  utilidad_producto           Float
  comision_venta              Float
  sobreprecio                 Float
  claveAutorizacion           String?
  numeroMaximoServiciosPorDia Int?
  status                      String   @default("active")
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime
}

model Cotizacion {
  id                                 String                             @id
  eventoTipoId                       String
  eventoId                           String
  nombre                             String
  precio                             Float
  descripcion                        String?
  condicionesComercialesId           String?
  condicionesComercialesMetodoPagoId String?
  status                             String                             @default("pendiente")
  archivada                          Boolean                            @default(false)
  visible_cliente                    Boolean?                           @default(true)
  createdAt                          DateTime                           @default(now())
  updatedAt                          DateTime
  expiresAt                          DateTime?                          @default(dbgenerated("(now() + '10 days'::interval)"))
  CondicionesComerciales             CondicionesComerciales?            @relation(fields: [condicionesComercialesId], references: [id])
  Evento                             Evento                             @relation(fields: [eventoId], references: [id])
  EventoTipo                         EventoTipo                         @relation(fields: [eventoTipoId], references: [id])
  CotizacionCosto                    CotizacionCosto[]
  CotizacionServicio                 CotizacionServicio[]
  CotizacionVisita                   CotizacionVisita[]
  Pago                               Pago[]
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago[]
}

model CotizacionCosto {
  id           String     @id
  cotizacionId String
  nombre       String
  descripcion  String?
  costo        Float      @default(0)
  tipo         String     @default("adicional")
  posicion     Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime
  Cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
}

model CotizacionServicio {
  id                        String             @id
  cotizacionId              String
  servicioId                String?
  servicioCategoriaId       String?
  cantidad                  Int                @default(1)
  posicion                  Int                @default(0)
  userId                    String?
  fechaAsignacion           DateTime?
  FechaEntrega              DateTime?
  status                    String             @default("pendiente")
  seccion_nombre_snapshot   String?
  categoria_nombre_snapshot String?
  nombre_snapshot           String             @default("Servicio migrado")
  descripcion_snapshot      String?
  precio_unitario_snapshot  Float              @default(0)
  costo_snapshot            Float              @default(0)
  gasto_snapshot            Float              @default(0)
  utilidad_snapshot         Float              @default(0)
  precio_publico_snapshot   Float              @default(0)
  tipo_utilidad_snapshot    String             @default("servicio")
  precioUnitario            Float              @default(0)
  subtotal                  Float              @default(0)
  nombre                    String?
  descripcion               String?
  costo                     Float?             @default(0)
  gasto                     Float?             @default(0)
  utilidad                  Float?             @default(0)
  precio_publico            Float?             @default(0)
  tipo_utilidad             String?            @default("servicio")
  categoria_nombre          String?
  seccion_nombre            String?
  es_personalizado          Boolean            @default(false)
  servicio_original_id      String?
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime
  Cotizacion                Cotizacion         @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
  ServicioCategoria         ServicioCategoria? @relation(fields: [servicioCategoriaId], references: [id])
  Servicio                  Servicio?          @relation(fields: [servicioId], references: [id])
  User                      User?              @relation(fields: [userId], references: [id])
  NominaServicio            NominaServicio[]
}

model CotizacionVisita {
  id           String     @id
  cotizacionId String
  createdAt    DateTime   @default(now())
  Cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
}

model Evento {
  id             String           @id
  clienteId      String
  eventoTipoId   String?
  nombre         String?          @default("Pendiente")
  fecha_evento   DateTime
  sede           String?
  direccion      String?
  status         String           @default("active")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  userId         String?
  eventoEtapaId  String?
  Agenda         Agenda[]
  Cotizacion     Cotizacion[]
  Cliente        Cliente          @relation(fields: [clienteId], references: [id])
  EventoEtapa    EventoEtapa?     @relation(fields: [eventoEtapaId], references: [id])
  EventoTipo     EventoTipo?      @relation(fields: [eventoTipoId], references: [id])
  User           User?            @relation(fields: [userId], references: [id])
  EventoBitacora EventoBitacora[]
  Gasto          Gasto[]
  Nomina         Nomina[]
}

model EventoBitacora {
  id          String   @id
  eventoId    String
  comentario  String
  importancia String   @default("1")
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  Evento      Evento   @relation(fields: [eventoId], references: [id])
}

model EventoEtapa {
  id        String   @id
  nombre    String
  posicion  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime
  Evento    Evento[]
}

model EventoTipo {
  id         String       @id
  nombre     String
  posicion   Int          @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime
  Cotizacion Cotizacion[]
  Evento     Evento[]
  Paquete    Paquete[]
}

model Gasto {
  id             String    @id
  concepto       String
  descripcion    String?
  monto          Float
  categoria      String
  subcategoria   String?
  fecha          DateTime  @default(now())
  fechaFactura   DateTime?
  status         String    @default("activo")
  metodoPago     String?
  numeroFactura  String?
  proveedor      String?
  eventoId       String?
  usuarioId      String
  comprobanteUrl String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime
  Evento         Evento?   @relation(fields: [eventoId], references: [id])
  User           User      @relation(fields: [usuarioId], references: [id])

  @@index([eventoId])
  @@index([fecha, categoria])
}

model MetodoPago {
  id                               String                             @id
  metodo_pago                      String
  comision_porcentaje_base         Float?
  comision_fija_monto              Float?
  num_msi                          Int?
  comision_msi_porcentaje          Float?
  orden                            Int?                               @default(0)
  payment_method                   String?                            @default("card")
  status                           String                             @default("active")
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Pago                             Pago[]
}

model Nomina {
  id                               String           @id
  userId                           String
  eventoId                         String?
  concepto                         String
  descripcion                      String?
  monto_bruto                      Float
  deducciones                      Float            @default(0)
  monto_neto                       Float
  tipo_pago                        String           @default("individual")
  servicios_incluidos              Int              @default(1)
  fecha_asignacion                 DateTime         @default(now())
  fecha_autorizacion               DateTime?
  fecha_pago                       DateTime?
  periodo_inicio                   DateTime?
  periodo_fin                      DateTime?
  status                           String           @default("pendiente")
  autorizado_por                   String?
  pagado_por                       String?
  metodo_pago                      String?          @default("transferencia")
  costo_total_snapshot             Float            @default(0)
  gasto_total_snapshot             Float            @default(0)
  comision_porcentaje              Float?
  createdAt                        DateTime         @default(now())
  updatedAt                        DateTime
  User_Nomina_autorizado_porToUser User?            @relation("Nomina_autorizado_porToUser", fields: [autorizado_por], references: [id])
  Evento                           Evento?          @relation(fields: [eventoId], references: [id])
  User_Nomina_pagado_porToUser     User?            @relation("Nomina_pagado_porToUser", fields: [pagado_por], references: [id])
  User_Nomina_userIdToUser         User             @relation("Nomina_userIdToUser", fields: [userId], references: [id])
  NominaServicio                   NominaServicio[]
}

model NominaServicio {
  id                   String              @id
  nominaId             String
  cotizacionServicioId String?
  servicio_nombre      String
  seccion_nombre       String?
  categoria_nombre     String?
  costo_asignado       Float
  cantidad_asignada    Int                 @default(1)
  createdAt            DateTime            @default(now())
  CotizacionServicio   CotizacionServicio? @relation(fields: [cotizacionServicioId], references: [id])
  Nomina               Nomina              @relation(fields: [nominaId], references: [id], onDelete: Cascade)

  @@unique([nominaId, cotizacionServicioId])
}

model Notificacion {
  id           String   @id
  userId       String?
  titulo       String
  mensaje      String
  status       String   @default("active")
  cotizacionId String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime
}

model Pago {
  id                                 String                            @id
  clienteId                          String?
  cotizacionId                       String?
  condicionesComercialesId           String?
  condicionesComercialesMetodoPagoId String?
  metodoPagoId                       String?
  metodo_pago                        String
  monto                              Float
  comisionStripe                     Float?
  concepto                           String
  descripcion                        String?
  stripe_session_id                  String?                           @unique
  stripe_payment_id                  String?                           @unique
  status                             String                            @default("pending")
  createdAt                          DateTime                          @default(now())
  updatedAt                          DateTime
  userId                             String?
  tipo_transaccion                   String?                           @default("ingreso")
  categoria_transaccion              String?                           @default("abono")
  Cliente                            Cliente?                          @relation(fields: [clienteId], references: [id])
  CondicionesComerciales             CondicionesComerciales?           @relation(fields: [condicionesComercialesId], references: [id])
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago? @relation(fields: [condicionesComercialesMetodoPagoId], references: [id])
  Cotizacion                         Cotizacion?                       @relation(fields: [cotizacionId], references: [id])
  MetodoPago                         MetodoPago?                       @relation(fields: [metodoPagoId], references: [id])
  User                               User?                             @relation(fields: [userId], references: [id])
}

model Paquete {
  id              String            @id
  eventoTipoId    String
  nombre          String
  costo           Float?
  gasto           Float?
  utilidad        Float?
  precio          Float?
  status          String            @default("active")
  posicion        Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime
  EventoTipo      EventoTipo        @relation(fields: [eventoTipoId], references: [id])
  PaqueteServicio PaqueteServicio[]
}

model PaqueteServicio {
  id                  String            @id
  paqueteId           String
  servicioId          String
  servicioCategoriaId String
  cantidad            Int               @default(1)
  posicion            Int               @default(0)
  visible_cliente     Boolean           @default(true)
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime
  Paquete             Paquete           @relation(fields: [paqueteId], references: [id], onDelete: Cascade)
  ServicioCategoria   ServicioCategoria @relation(fields: [servicioCategoriaId], references: [id])
  Servicio            Servicio          @relation(fields: [servicioId], references: [id])
}

model SeccionCategoria {
  id                String            @id
  seccionId         String
  categoriaId       String            @unique
  ServicioCategoria ServicioCategoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  ServicioSeccion   ServicioSeccion   @relation(fields: [seccionId], references: [id], onDelete: Cascade)
}

model Servicio {
  id                  String               @id
  servicioCategoriaId String
  nombre              String
  costo               Float                @default(0)
  gasto               Float                @default(0)
  utilidad            Float                @default(0)
  precio_publico      Float                @default(0)
  tipo_utilidad       String               @default("servicio")
  posicion            Int                  @default(0)
  status              String               @default("active")
  visible_cliente     Boolean              @default(true)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime
  CotizacionServicio  CotizacionServicio[]
  PaqueteServicio     PaqueteServicio[]
  ServicioCategoria   ServicioCategoria    @relation(fields: [servicioCategoriaId], references: [id])
  ServicioGasto       ServicioGasto[]
}

model ServicioCategoria {
  id                 String               @id
  nombre             String               @unique
  posicion           Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  CotizacionServicio CotizacionServicio[]
  PaqueteServicio    PaqueteServicio[]
  SeccionCategoria   SeccionCategoria?
  Servicio           Servicio[]
}

model ServicioGasto {
  id         String   @id
  servicioId String
  nombre     String
  costo      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  Servicio   Servicio @relation(fields: [servicioId], references: [id])
}

model ServicioSeccion {
  id               String             @id
  nombre           String             @unique
  descripcion      String?
  posicion         Int                @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  SeccionCategoria SeccionCategoria[]
}

model Sesion {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Suscripcion {
  id               String    @id
  clienteId        String    @unique
  tipo             String    @default("evento")
  status           String    @default("activa")
  fechaInicio      DateTime  @default(now())
  fechaVencimiento DateTime?
  precio           Float?
  descripcion      String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime
  Cliente          Cliente   @relation(fields: [clienteId], references: [id])
}

model User {
  id                                 String               @id
  username                           String?
  email                              String?
  password                           String
  role                               String               @default("user")
  telefono                           String?
  status                             String               @default("inactive")
  createdAt                          DateTime             @default(now())
  updatedAt                          DateTime
  Agenda                             Agenda[]
  CotizacionServicio                 CotizacionServicio[]
  Evento                             Evento[]
  Gasto                              Gasto[]
  Nomina_Nomina_autorizado_porToUser Nomina[]             @relation("Nomina_autorizado_porToUser")
  Nomina_Nomina_pagado_porToUser     Nomina[]             @relation("Nomina_pagado_porToUser")
  Nomina_Nomina_userIdToUser         Nomina[]             @relation("Nomina_userIdToUser")
  Pago                               Pago[]
  Sesion                             Sesion[]
}
