generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String               @id @default(cuid())
  username           String?
  email              String?
  password           String
  role               String               @default("user")
  telefono           String?
  status             String               @default("inactive")
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Agenda             Agenda[]
  CotizacionServicio CotizacionServicio[]
  Evento             Evento[]
  Gasto              Gasto[]
  NominaAutorizada   Nomina[]             @relation("AutorizadoPor")
  NominaPagada       Nomina[]             @relation("PagadoPor")
  Nomina             Nomina[]             @relation("NominaUsuario")
  Pago               Pago[]
  Sesion             Sesion[]
}

model Sesion {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
}

model Cliente {
  id            String       @id @default(cuid())
  nombre        String
  email         String?
  telefono      String?      @unique
  direccion     String?
  status        String       @default("activo")
  canalId       String?
  userId        String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  emailVerified Boolean      @default(false)
  isActive      Boolean      @default(true)
  lastLogin     DateTime?
  passwordHash  String?
  Canal         Canal?       @relation(fields: [canalId], references: [id])
  Evento        Evento[]
  Pago          Pago[]
  Suscripcion   Suscripcion?
}

model Evento {
  id             String           @id @default(cuid())
  clienteId      String
  eventoTipoId   String?
  nombre         String?          @default("Pendiente")
  fecha_evento   DateTime
  sede           String?
  direccion      String?
  status         String           @default("active")
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  userId         String?
  eventoEtapaId  String?
  Agenda         Agenda[]
  Cita           Cita[]
  Cotizacion     Cotizacion[]
  Cliente        Cliente          @relation(fields: [clienteId], references: [id])
  EventoEtapa    EventoEtapa?     @relation(fields: [eventoEtapaId], references: [id])
  EventoTipo     EventoTipo?      @relation(fields: [eventoTipoId], references: [id])
  User           User?            @relation(fields: [userId], references: [id])
  EventoBitacora EventoBitacora[]
  Gasto          Gasto[]
  Nomina         Nomina[]
}

model EventoBitacora {
  id          String   @id @default(cuid())
  eventoId    String
  comentario  String
  importancia String   @default("1")
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Evento      Evento   @relation(fields: [eventoId], references: [id])
}

model EventoTipo {
  id         String       @id @default(cuid())
  nombre     String
  posicion   Int          @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Cotizacion Cotizacion[]
  Evento     Evento[]
  Paquete    Paquete[]
}

model EventoEtapa {
  id        String   @id @default(cuid())
  nombre    String
  posicion  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  codigo    String?  @unique
  Evento    Evento[]
}

model Canal {
  id        String    @id @default(cuid())
  nombre    String
  posicion  Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Cliente   Cliente[]
}

model Pago {
  id                                 String                            @id @default(cuid())
  clienteId                          String?
  cotizacionId                       String?
  condicionesComercialesId           String?
  condicionesComercialesMetodoPagoId String?
  metodoPagoId                       String?
  metodo_pago                        String
  monto                              Float
  concepto                           String
  descripcion                        String?
  stripe_session_id                  String?                           @unique
  stripe_payment_id                  String?                           @unique
  status                             String                            @default("pending")
  createdAt                          DateTime                          @default(now())
  updatedAt                          DateTime                          @updatedAt
  categoria_transaccion              String?                           @default("abono")
  tipo_transaccion                   String?                           @default("ingreso")
  userId                             String?
  comisionStripe                     Float?
  Cliente                            Cliente?                          @relation(fields: [clienteId], references: [id])
  CondicionesComerciales             CondicionesComerciales?           @relation(fields: [condicionesComercialesId], references: [id])
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago? @relation(fields: [condicionesComercialesMetodoPagoId], references: [id])
  Cotizacion                         Cotizacion?                       @relation(fields: [cotizacionId], references: [id])
  MetodoPago                         MetodoPago?                       @relation(fields: [metodoPagoId], references: [id])
  User                               User?                             @relation(fields: [userId], references: [id])
}

model Cotizacion {
  id                                 String                             @id @default(cuid())
  eventoTipoId                       String
  eventoId                           String
  nombre                             String
  precio                             Float
  condicionesComercialesId           String?
  condicionesComercialesMetodoPagoId String?
  status                             String                             @default("pendiente")
  createdAt                          DateTime                           @default(now())
  updatedAt                          DateTime                           @updatedAt
  expiresAt                          DateTime?                          @default(dbgenerated("(now() + '10 days'::interval)"))
  visible_cliente                    Boolean?                           @default(true)
  descripcion                        String?
  archivada                          Boolean                            @default(false)
  descuento                          Float?
  dias_minimos_contratacion          Int?                               @default(5)
  dias_minimos_explicacion           String?                            @default("Para garantizar la disponibilidad del equipo y coordinaci√≥n del evento")
  CondicionesComerciales             CondicionesComerciales?            @relation(fields: [condicionesComercialesId], references: [id])
  Evento                             Evento                             @relation(fields: [eventoId], references: [id])
  EventoTipo                         EventoTipo                         @relation(fields: [eventoTipoId], references: [id])
  Costos                             CotizacionCosto[]
  Servicio                           CotizacionServicio[]
  CotizacionVisita                   CotizacionVisita[]
  Pago                               Pago[]
  SolicitudPaquete                   SolicitudPaquete[]
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago[] @relation("CondicionesComercialesMetodoPagoToCotizacion")
}

model CotizacionServicio {
  id                        String             @id @default(cuid())
  cotizacionId              String
  servicioId                String?
  servicioCategoriaId       String?
  cantidad                  Int                @default(1)
  posicion                  Int                @default(0)
  userId                    String?
  fechaAsignacion           DateTime?
  FechaEntrega              DateTime?
  status                    String             @default("pendiente")
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @updatedAt
  nombre                    String?
  precioUnitario            Float              @default(0)
  subtotal                  Float              @default(0)
  costo                     Float?             @default(0)
  categoria_nombre          String?
  descripcion               String?
  es_personalizado          Boolean            @default(false)
  gasto                     Float?             @default(0)
  precio_publico            Float?             @default(0)
  seccion_nombre            String?
  servicio_original_id      String?
  tipo_utilidad             String?            @default("servicio")
  utilidad                  Float?             @default(0)
  categoria_nombre_snapshot String?
  costo_snapshot            Float              @default(0)
  descripcion_snapshot      String?
  gasto_snapshot            Float              @default(0)
  nombre_snapshot           String             @default("Servicio migrado")
  precio_publico_snapshot   Float              @default(0)
  precio_unitario_snapshot  Float              @default(0)
  seccion_nombre_snapshot   String?
  tipo_utilidad_snapshot    String             @default("servicio")
  utilidad_snapshot         Float              @default(0)
  Cotizacion                Cotizacion         @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
  ServicioCategoria         ServicioCategoria? @relation(fields: [servicioCategoriaId], references: [id])
  Servicio                  Servicio?          @relation(fields: [servicioId], references: [id])
  User                      User?              @relation(fields: [userId], references: [id])
  NominaServicio            NominaServicio[]
}

model CotizacionCosto {
  id           String     @id @default(cuid())
  cotizacionId String
  nombre       String
  descripcion  String?
  costo        Float      @default(0)
  tipo         String     @default("adicional")
  posicion     Int        @default(0)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  Cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
}



model Servicio {
  id                  String               @id @default(cuid())
  servicioCategoriaId String
  nombre              String
  costo               Float                @default(0)
  gasto               Float                @default(0)
  utilidad            Float                @default(0)
  precio_publico      Float                @default(0)
  posicion            Int                  @default(0)
  visible_cliente     Boolean              @default(true)
  tipo_utilidad       String               @default("servicio")
  status              String               @default("active")
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  CotizacionServicio  CotizacionServicio[]
  PaqueteServicio     PaqueteServicio[]
  ServicioCategoria   ServicioCategoria    @relation(fields: [servicioCategoriaId], references: [id])
  ServicioGasto       ServicioGasto[]
}

model ServicioSeccion {
  id                String             @id @default(cuid())
  nombre            String             @unique
  descripcion       String?
  posicion          Int                @default(0)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  seccionCategorias SeccionCategoria[]
}

model SeccionCategoria {
  id                String            @id @default(cuid())
  seccionId         String
  categoriaId       String            @unique
  ServicioCategoria ServicioCategoria @relation(fields: [categoriaId], references: [id], onDelete: Cascade)
  Seccion           ServicioSeccion   @relation(fields: [seccionId], references: [id], onDelete: Cascade)
}

model ServicioGasto {
  id         String   @id @default(cuid())
  servicioId String
  nombre     String
  costo      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Servicio   Servicio @relation(fields: [servicioId], references: [id])
}

model ServicioCategoria {
  id                 String               @id @default(cuid())
  nombre             String               @unique
  posicion           Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  CotizacionServicio CotizacionServicio[]
  PaqueteServicio    PaqueteServicio[]
  seccionCategoria   SeccionCategoria?
  Servicio           Servicio[]
}

model Paquete {
  id                        String             @id @default(cuid())
  eventoTipoId              String
  nombre                    String
  costo                     Float?
  gasto                     Float?
  utilidad                  Float?
  precio                    Float?
  status                    String             @default("active")
  posicion                  Int                @default(0)
  createdAt                 DateTime           @default(now())
  updatedAt                 DateTime           @updatedAt
  dias_minimos_contratacion Int?               @default(5)
  dias_minimos_explicacion  String?            @default("Para garantizar la disponibilidad del equipo y coordinaci√≥n del evento")
  EventoTipo                EventoTipo         @relation(fields: [eventoTipoId], references: [id])
  PaqueteServicio           PaqueteServicio[]
  SolicitudPaquete          SolicitudPaquete[]
}

model PaqueteServicio {
  id                  String            @id @default(cuid())
  paqueteId           String
  servicioId          String
  servicioCategoriaId String
  cantidad            Int               @default(1)
  posicion            Int               @default(0)
  visible_cliente     Boolean           @default(true)
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  Paquete             Paquete           @relation(fields: [paqueteId], references: [id], onDelete: Cascade)
  ServicioCategoria   ServicioCategoria @relation(fields: [servicioCategoriaId], references: [id])
  Servicio            Servicio          @relation(fields: [servicioId], references: [id])
}

model Configuracion {
  id                          String   @id @default(cuid())
  nombre                      String
  utilidad_servicio           Float
  utilidad_producto           Float
  comision_venta              Float
  sobreprecio                 Float
  status                      String   @default("active")
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  claveAutorizacion           String?
  numeroMaximoServiciosPorDia Int?
}

model MetodoPago {
  id                               String                             @id @default(cuid())
  metodo_pago                      String
  comision_fija_monto              Float?
  num_msi                          Int?
  comision_msi_porcentaje          Float?
  orden                            Int?                               @default(0)
  payment_method                   String?                            @default("card")
  status                           String                             @default("active")
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  comision_porcentaje_base         Float?                             @map("comision_porcentaje_base")
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Pago                             Pago[]
}

model CondicionesComerciales {
  id                               String                             @id @default(cuid())
  nombre                           String
  descripcion                      String?
  descuento                        Float?
  porcentaje_anticipo              Float?                             @default(0)
  status                           String                             @default("active")
  orden                            Int?                               @default(0)
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Cotizacion                       Cotizacion[]
  Pago                             Pago[]
}

model CondicionesComercialesMetodoPago {
  id                       String                 @id @default(cuid())
  condicionesComercialesId String
  metodoPagoId             String
  orden                    Int?                   @default(0)
  status                   String                 @default("active")
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
  CondicionesComerciales   CondicionesComerciales @relation(fields: [condicionesComercialesId], references: [id], onDelete: Cascade)
  MetodoPago               MetodoPago             @relation(fields: [metodoPagoId], references: [id])
  Pago                     Pago[]
  Cotizacion               Cotizacion[]           @relation("CondicionesComercialesMetodoPagoToCotizacion")
}

model Agenda {
  id            String    @id @default(cuid())
  userId        String?
  eventoId      String
  concepto      String?
  descripcion   String?
  googleMapsUrl String?
  direccion     String?
  fecha         DateTime?
  hora          String?
  status        String    @default("pendiente")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  agendaTipo    String?
  Evento        Evento    @relation(fields: [eventoId], references: [id])
  User          User?     @relation(fields: [userId], references: [id])
}

model AgendaTipo {
  id        String   @id @default(cuid())
  nombre    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notificacion {
  id           String   @id @default(cuid())
  userId       String?
  titulo       String
  mensaje      String
  status       String   @default("active")
  cotizacionId String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  metadata     Json?
  tipo         String   @default("general")
}

model Nomina {
  id                   String           @id @default(cuid())
  userId               String
  eventoId             String?
  concepto             String
  descripcion          String?
  monto_bruto          Float
  deducciones          Float            @default(0)
  monto_neto           Float
  tipo_pago            String           @default("individual")
  servicios_incluidos  Int              @default(1)
  fecha_asignacion     DateTime         @default(now())
  fecha_autorizacion   DateTime?
  fecha_pago           DateTime?
  periodo_inicio       DateTime?
  periodo_fin          DateTime?
  status               String           @default("pendiente")
  autorizado_por       String?
  pagado_por           String?
  metodo_pago          String?          @default("transferencia")
  costo_total_snapshot Float            @default(0)
  gasto_total_snapshot Float            @default(0)
  comision_porcentaje  Float?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  AutorizadoPor        User?            @relation("AutorizadoPor", fields: [autorizado_por], references: [id])
  Evento               Evento?          @relation(fields: [eventoId], references: [id])
  PagadoPor            User?            @relation("PagadoPor", fields: [pagado_por], references: [id])
  User                 User             @relation("NominaUsuario", fields: [userId], references: [id])
  NominaServicio       NominaServicio[]
}

model NominaServicio {
  id                   String              @id @default(cuid())
  nominaId             String
  cotizacionServicioId String?
  servicio_nombre      String
  seccion_nombre       String?
  categoria_nombre     String?
  costo_asignado       Float
  cantidad_asignada    Int                 @default(1)
  createdAt            DateTime            @default(now())
  CotizacionServicio   CotizacionServicio? @relation(fields: [cotizacionServicioId], references: [id])
  Nomina               Nomina              @relation(fields: [nominaId], references: [id], onDelete: Cascade)

  @@unique([nominaId, cotizacionServicioId])
}



model Gasto {
  id             String    @id @default(cuid())
  concepto       String
  descripcion    String?
  monto          Float
  categoria      String
  subcategoria   String?
  fecha          DateTime  @default(now())
  fechaFactura   DateTime?
  status         String    @default("activo")
  metodoPago     String?
  numeroFactura  String?
  proveedor      String?
  eventoId       String?
  usuarioId      String
  comprobanteUrl String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Evento         Evento?   @relation(fields: [eventoId], references: [id])
  Usuario        User      @relation(fields: [usuarioId], references: [id])

  @@index([fecha, categoria])
  @@index([eventoId])
}

model Negocio {
  id              String            @id @default(cuid())
  nombre          String
  descripcion     String?
  direccion       String?
  telefono        String?
  email           String?
  sitioWeb        String?
  logoUrl         String?
  isotipoUrl      String?
  moneda          String            @default("MXN")
  timezone        String            @default("America/Mexico_City")
  idioma          String            @default("es")
  status          String            @default("active")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  NegocioHorarios NegocioHorarios[]
  NegocioRRSS     NegocioRRSS[]
  NegocioBanco    NegocioBanco[]
}

model NegocioRRSS {
  id         String   @id @default(cuid())
  negocioId  String
  plataforma String
  username   String?
  url        String
  activo     Boolean  @default(true)
  orden      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Negocio    Negocio  @relation(fields: [negocioId], references: [id], onDelete: Cascade)

  @@unique([negocioId, plataforma])
  @@index([negocioId, activo])
}

model NegocioHorarios {
  id            String    @id @default(cuid())
  negocioId     String
  diaSemana     Int
  horaInicio    String?
  horaFin       String?
  cerrado       Boolean   @default(false)
  fechaEspecial DateTime?
  notas         String?
  activo        Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Negocio       Negocio   @relation(fields: [negocioId], references: [id], onDelete: Cascade)

  @@unique([negocioId, diaSemana])
  @@index([negocioId, activo])
}

model SolicitudPaquete {
  id               String     @id @default(cuid())
  cotizacionId     String
  paqueteId        String
  clienteNombre    String
  clienteEmail     String
  clienteTelefono  String?
  mensaje          String?
  paqueteNombre    String
  precioPaquete    Float
  diferenciaPrecio Float?
  eventoFecha      DateTime?
  eventoLugar      String?
  estado           String     @default("pendiente")
  notas            String?
  fechaSolicitud   DateTime   @default(now())
  fechaProcesada   DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  Cotizacion       Cotizacion @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
  Paquete          Paquete    @relation(fields: [paqueteId], references: [id])

  @@index([cotizacionId])
  @@index([paqueteId])
  @@index([estado])
  @@index([fechaSolicitud])
}

model Cita {
  id               String             @id @default(cuid())
  eventoId         String
  fecha            DateTime
  hora             String
  tipo             CitaTipo
  modalidad        CitaModalidad
  status           CitaStatus         @default(PROGRAMADA)
  asunto           String
  descripcion      String?
  ubicacion        String?
  urlVirtual       String?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Evento           Evento             @relation(fields: [eventoId], references: [id], onDelete: Cascade)
  CitaComentario   CitaComentario[]
  CitaRecordatorio CitaRecordatorio[]

  @@index([eventoId])
  @@index([fecha])
  @@index([status])
  @@index([tipo])
}

model CitaComentario {
  id         String   @id @default(cuid())
  citaId     String
  comentario String
  createdAt  DateTime @default(now())
  Cita       Cita     @relation(fields: [citaId], references: [id], onDelete: Cascade)

  @@index([citaId])
}

model CitaRecordatorio {
  id                 String    @id @default(cuid())
  citaId             String
  tiempoAnticipacion Int
  enviado            Boolean   @default(false)
  fechaEnvio         DateTime?
  createdAt          DateTime  @default(now())
  Cita               Cita      @relation(fields: [citaId], references: [id], onDelete: Cascade)

  @@index([citaId])
  @@index([enviado])
}

enum CitaTipo {
  COMERCIAL
  SEGUIMIENTO
  CIERRE
  POST_VENTA
}

enum CitaModalidad {
  PRESENCIAL
  VIRTUAL
  TELEFONICA
}

enum CitaStatus {
  PROGRAMADA
  CONFIRMADA
  EN_CURSO
  COMPLETADA
  CANCELADA
  NO_ASISTIO
}

model NegocioBanco {
  id           String   @id @default(cuid())
  negocioId    String
  banco        String
  beneficiario String
  clabe        String   @unique
  cuenta       String?
  sucursal     String?
  status       String   @default("active")
  principal    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Negocio      Negocio  @relation(fields: [negocioId], references: [id], onDelete: Cascade)

  @@index([negocioId])
  @@index([status])
}

// TODO: Revisar y depurar modelos que no est√©n en uso actualmente
model CotizacionVisita {
  id           String     @id @default(cuid())
  cotizacionId String
  createdAt    DateTime   @default(now())
  Cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id], onDelete: Cascade)
}

model Suscripcion {
  id               String    @id @default(cuid())
  clienteId        String    @unique
  tipo             String    @default("evento")
  status           String    @default("activa")
  fechaInicio      DateTime  @default(now())
  fechaVencimiento DateTime?
  precio           Float?
  descripcion      String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  cliente          Cliente   @relation(fields: [clienteId], references: [id])
}

model Campania {
  id        String    @id @default(cuid())
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Anuncio   Anuncio[]
}

model AnuncioPlataforma {
  id        String    @id @default(cuid())
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Anuncio   Anuncio[]
}

model AnuncioTipo {
  id        String    @id @default(cuid())
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  anuncio   Anuncio[]
}

model AnuncioCategoria {
  id        String    @id @default(cuid())
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  anuncio   Anuncio[]
}

model Anuncio {
  id                  String            @id @default(cuid())
  campaniaId          String
  nombre              String
  anuncioTipoId       String
  anuncioCategoriaId  String
  anuncioPlataformaId String
  imagen_url          String
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  AnuncioCategoria    AnuncioCategoria  @relation(fields: [anuncioCategoriaId], references: [id])
  AnuncioPlataforma   AnuncioPlataforma @relation(fields: [anuncioPlataformaId], references: [id])
  AnuncioTipo         AnuncioTipo       @relation(fields: [anuncioTipoId], references: [id])
  Campania            Campania          @relation(fields: [campaniaId], references: [id])
}

model AnuncioVisita {
  id        String   @id @default(cuid())
  anuncioId String
  fecha     DateTime
  createdAt DateTime @default(now())
}