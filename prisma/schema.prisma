generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String?
  email     String?
  password  String
  role      String   @default("user")
  telefono  String?
  status    String   @default("inactive")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Sesion    Sesion[]
  Agenda    Agenda[]
  Pago      Pago[]
  Evento    Evento[]
  // Notificacion Notificacion[]
}

model Sesion {
  id        String   @id @default(cuid())
  userId    String
  User      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cliente {
  id        String   @id @default(cuid())
  nombre    String
  email     String?
  telefono  String?  @unique
  direccion String?
  status    String   @default("activo") //prospecto, cliente
  canalId   String?
  Canal     Canal?   @relation(fields: [canalId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Evento    Evento[]
  Pago      Pago[]
}

model Evento {
  id           String      @id @default(cuid())
  clienteId    String
  Cliente      Cliente     @relation(fields: [clienteId], references: [id])
  eventoTipoId String?
  EventoTipo   EventoTipo? @relation(fields: [eventoTipoId], references: [id])
  nombre       String?     @default("Pendiente")
  fecha_evento DateTime
  sede         String?
  direccion    String?
  status       String      @default("active")
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  userId String?
  User   User?   @relation(fields: [userId], references: [id])

  eventoEtapaId String?
  EventoEtapa   EventoEtapa? @relation(fields: [eventoEtapaId], references: [id])

  EventoBitacora EventoBitacora[]
  Cotizacion     Cotizacion[]
  Agenda         Agenda[]
}

model EventoBitacora {
  id          String   @id @default(cuid())
  eventoId    String
  Evento      Evento   @relation(fields: [eventoId], references: [id])
  comentario  String
  importancia String   @default("1")
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EventoTipo {
  id         String       @id @default(cuid())
  nombre     String //XV años Boda, Bautizo, Cumpleaños, etc
  posicion   Int          @default(0)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  Evento     Evento[]
  Paquete    Paquete[]
  Cotizacion Cotizacion[]
}

model EventoEtapa {
  id        String   @id @default(cuid())
  nombre    String
  posicion  Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Evento    Evento[]
}

model Canal {
  id        String    @id @default(cuid())
  nombre    String
  posicion  Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Cliente   Cliente[]
}

model Pago {
  id                                 String                            @id @default(cuid())
  clienteId                          String? //id del cliente
  Cliente                            Cliente?                          @relation(fields: [clienteId], references: [id])
  cotizacionId                       String?
  Cotizacion                         Cotizacion?                       @relation(fields: [cotizacionId], references: [id])
  condicionesComercialesId           String?
  CondicionesComerciales             CondicionesComerciales?           @relation(fields: [condicionesComercialesId], references: [id])
  condicionesComercialesMetodoPagoId String?
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago? @relation(fields: [condicionesComercialesMetodoPagoId], references: [id])
  metodoPagoId                       String?
  MetodoPago                         MetodoPago?                       @relation(fields: [metodoPagoId], references: [id])
  metodo_pago                        String
  monto                              Float
  concepto                           String
  descripcion                        String?
  stripe_session_id                  String?                           @unique
  stripe_payment_id                  String?                           @unique
  status                             String                            @default("pending") //pending, succeeded, failed
  createdAt                          DateTime                          @default(now())
  updatedAt                          DateTime                          @updatedAt
  //agregadas
  userId                             String?
  User                               User?                             @relation(fields: [userId], references: [id])
  tipo_transaccion                   String?                           @default("ingreso") //ingreso, egreso
  categoria_transaccion              String?                           @default("abono") //abono, honorarios, servicio, producto, comision, ajuste
}

model Cotizacion {
  id                                 String                             @id @default(cuid())
  eventoTipoId                       String
  EventoTipo                         EventoTipo                         @relation(fields: [eventoTipoId], references: [id])
  eventoId                           String
  Evento                             Evento                             @relation(fields: [eventoId], references: [id])
  nombre                             String
  precio                             Float
  condicionesComercialesId           String?
  CondicionesComerciales             CondicionesComerciales?            @relation(fields: [condicionesComercialesId], references: [id])
  condicionesComercialesMetodoPagoId String?
  CondicionesComercialesMetodoPago   CondicionesComercialesMetodoPago[]
  status                             String                             @default("pending") //pendiente, aprobado, rechazado
  createdAt                          DateTime                           @default(now())
  updatedAt                          DateTime                           @updatedAt
  expiresAt                          DateTime?                          @default(dbgenerated("now() + interval '10 day'"))
  Servicio                           CotizacionServicio[]
  contratoId                         String?
  Pago                               Pago[]
  CotizacionVisita                   CotizacionVisita[]
  // Notificacion                       Notificacion[]
}

model CotizacionServicio {
  id                  String            @id @default(cuid())
  cotizacionId        String
  Cotizacion          Cotizacion        @relation(fields: [cotizacionId], references: [id])
  servicioId          String
  Servicio            Servicio          @relation(fields: [servicioId], references: [id])
  servicioCategoriaId String
  ServicioCategoria   ServicioCategoria @relation(fields: [servicioCategoriaId], references: [id])
  cantidad            Int               @default(1)
  posicion            Int               @default(0)

  userId          String?
  fechaAsignacion DateTime?
  FechaEntrega    DateTime?
  status          String    @default("pendiente")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CotizacionVisita {
  id           String     @id @default(cuid())
  cotizacionId String
  Cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id])
  createdAt    DateTime   @default(now())
}

model Servicio {
  id                  String               @id @default(cuid())
  servicioCategoriaId String
  ServicioCategoria   ServicioCategoria    @relation(fields: [servicioCategoriaId], references: [id])
  nombre              String
  costo               Float                @default(0)
  gasto               Float                @default(0)
  utilidad            Float                @default(0)
  precio_publico      Float                @default(0)
  posicion            Int                  @default(0)
  visible_cliente     Boolean              @default(true)
  tipo_utilidad       String               @default("servicio") //servicio, producto
  status              String               @default("active")
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  ServicioGasto       ServicioGasto[]
  CotizacionServicio  CotizacionServicio[]
  PaqueteServicio     PaqueteServicio[]
}

model ServicioGasto {
  id         String   @id @default(cuid())
  servicioId String
  Servicio   Servicio @relation(fields: [servicioId], references: [id])
  nombre     String
  costo      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ServicioCategoria {
  id                 String               @id @default(cuid())
  nombre             String               @unique //Fotografia, Video, Entregable, etc
  posicion           Int                  @default(0)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Servicio           Servicio[]
  PaqueteServicio    PaqueteServicio[]
  CotizacionServicio CotizacionServicio[]
}

model Paquete {
  id              String            @id @default(cuid())
  eventoTipoId    String
  EventoTipo      EventoTipo        @relation(fields: [eventoTipoId], references: [id])
  nombre          String
  costo           Float?
  gasto           Float?
  utilidad        Float?
  precio          Float?
  status          String            @default("active")
  posicion        Int               @default(0)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  PaqueteServicio PaqueteServicio[]
}

model PaqueteServicio {
  id                  String            @id @default(cuid())
  paqueteId           String
  Paquete             Paquete           @relation(fields: [paqueteId], references: [id])
  servicioId          String
  Servicio            Servicio          @relation(fields: [servicioId], references: [id])
  servicioCategoriaId String
  ServicioCategoria   ServicioCategoria @relation(fields: [servicioCategoriaId], references: [id])
  cantidad            Int               @default(1)
  posicion            Int               @default(0)
  visible_cliente     Boolean           @default(true)
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model Configuracion {
  id                          String   @id @default(cuid())
  nombre                      String
  utilidad_servicio           Float
  utilidad_producto           Float
  comision_venta              Float
  sobreprecio                 Float
  claveAutorizacion           String? //!added
  numeroMaximoServiciosPorDia Int? //!added
  status                      String   @default("active")
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
}

model MetodoPago {
  id                               String                             @id @default(cuid())
  metodo_pago                      String //efectivo, tarjeta de crédito, tarjeta de debito, transferencia interbancaria, oxxo
  comision_porcentaje_base         Float?                             @map("comsion_porcentaje_base") //3.6
  comision_fija_monto              Float? //3
  num_msi                          Int? // 3, 6, 9, 12
  comision_msi_porcentaje          Float?
  orden                            Int?                               @default(0)
  payment_method                   String?                            @default("card")
  status                           String                             @default("active")
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Pago                             Pago[]
}

model CondicionesComerciales {
  id                               String                             @id @default(cuid())
  nombre                           String // 3/6/9/12 msi / 10% de desc plan estandar (30% anticipo / 70 en exibiciones) 
  descripcion                      String?
  descuento                        Float? // 10
  porcentaje_anticipo              Float?                             @default(0) // 30
  status                           String                             @default("active")
  orden                            Int?                               @default(0)
  createdAt                        DateTime                           @default(now())
  updatedAt                        DateTime                           @updatedAt
  CondicionesComercialesMetodoPago CondicionesComercialesMetodoPago[]
  Cotizacion                       Cotizacion[]
  Pago                             Pago[]
}

model CondicionesComercialesMetodoPago {
  id                       String                 @id @default(cuid())
  condicionesComercialesId String
  CondicionesComerciales   CondicionesComerciales @relation(fields: [condicionesComercialesId], references: [id])
  metodoPagoId             String
  MetodoPago               MetodoPago             @relation(fields: [metodoPagoId], references: [id])
  orden                    Int?                   @default(0)
  status                   String                 @default("active")
  createdAt                DateTime               @default(now())
  updatedAt                DateTime               @updatedAt
  Cotizacion               Cotizacion[]
  Pago                     Pago[]
}

//Anuncio
model Campania {
  id        String    @id @default(cuid())
  nombre    String
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Anuncio   Anuncio[]
}

model AnuncioPlataforma {
  id        String    @id @default(cuid())
  nombre    String //facebook, instagram, google, youtube, impreso
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Anuncio   Anuncio[]
}

model AnuncioTipo {
  id        String    @id @default(cuid())
  nombre    String //imagen, video, carousel
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  anuncio   Anuncio[]
}

model AnuncioCategoria {
  id        String    @id @default(cuid())
  nombre    String //banner, video, carousel
  status    String    @default("active")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  anuncio   Anuncio[]
}

model Anuncio {
  id                  String            @id @default(cuid())
  campaniaId          String
  Campania            Campania          @relation(fields: [campaniaId], references: [id])
  nombre              String
  anuncioTipoId       String
  AnuncioTipo         AnuncioTipo       @relation(fields: [anuncioTipoId], references: [id])
  anuncioCategoriaId  String
  AnuncioCategoria    AnuncioCategoria  @relation(fields: [anuncioCategoriaId], references: [id])
  anuncioPlataformaId String
  AnuncioPlataforma   AnuncioPlataforma @relation(fields: [anuncioPlataformaId], references: [id])
  imagen_url          String
  status              String            @default("active")
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

model AnuncioVisita {
  id        String   @id @default(cuid())
  anuncioId String
  fecha     DateTime
  createdAt DateTime @default(now())
}

model Agenda {
  id            String    @id @default(cuid())
  userId        String?
  User          User?     @relation(fields: [userId], references: [id])
  eventoId      String
  Evento        Evento    @relation(fields: [eventoId], references: [id])
  concepto      String?
  descripcion   String?
  googleMapsUrl String?
  direccion     String?
  fecha         DateTime?
  hora          String?
  status        String    @default("pendiente")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  agendaTipo    String?
}

model AgendaTipo {
  id        String   @id @default(cuid())
  nombre    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// model Notificacion {
//   id           String      @id @default(cuid())
//   userId       String?
//   User         User?       @relation(fields: [userId], references: [id])
//   titulo       String
//   mensaje      String
//   status       String      @default("active")
//   cotizacionId String?
//   Cotizacion   Cotizacion? @relation(fields: [cotizacionId], references: [id])
//   createdAt    DateTime    @default(now())
//   updatedAt    DateTime    @updatedAt
// }
